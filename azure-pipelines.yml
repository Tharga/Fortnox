trigger:
- master

name: 1.1.$(Rev:r)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/Tharga.Fortnox.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build and Test

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Restore nuget packages'
      inputs:
        command: 'restore'
        projects: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build'
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '-c $(buildConfiguration) --no-restore /p:Version=$(Build.BuildNumber) /p:NoWarn=0618'

    - task: DotNetCoreCLI@2
      displayName: 'Pack Tharga.Fortnox'
      inputs:
        command: 'pack'
        packagesToPack: '**/Tharga.Fortnox.csproj'
        versioningScheme: 'byBuildNumber'

    - task: DotNetCoreCLI@2
      displayName: 'Push nuget packages locally'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'df4b267e-c55c-4a36-8fe3-8e98d5d8dbbb/5cea672d-cb79-44f6-beb8-2eaba59e670d'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'

- stage: Release
  displayName: Release
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))
  jobs:

  - job: Release
    displayName: Release
    steps:
    - download: current
      artifact: drop
    - checkout: self
      persistCredentials: true

    - task: NuGetCommand@2
      displayName: 'Push nuget packages to nuget.org'
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg;!$(Pipeline.Workspace)/**/*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'Nuget.org'

    - script: |
         git tag $(Build.BuildNumber)
         git push origin $(Build.BuildNumber)
      workingDirectory: $(Build.SourcesDirectory)
      displayName: Tag